This project is two c++ classes and swig generated wrapper so that the classes can be called by Python.
The class: ISODate is a set of date functions that are used to generate payment schedues for financial objects
The second class: curve bootstraps up the LIBORs and swap rates to build a GBP curve. It exports functions
to calculate discount factors and forward rates

The classes are contained in a module called phin

You can copy the python files and _phin.pyd and put them somewhere Python 3.4 can see them and run the tests
or on a Windows machine if you have cl.exe version 16.00.40219.01 link.exe version 10.00.40219.01 and
SWIG version 3.0.07 you can build the binaries and create the python wrapper file.







File:			Contents
phin.py			The file generated by SWIG that wraps the c++ classes
data.py			The swap and libor data for the 22 October 2015
GBPInstrument.py	Contains the definition for a GBP Swap
SwapTest.py		Defines various swaps and exports a function to test they are being priced correctly	
makefile		The makefile for the project
_phin.pyd		The Windows DLL that contains the curve and date classes
Curve.h			The class definition for the curve class
Curve.cpp		The implementation of the curve class
ISODates.h		The class definition for the ISODate class
ISODates.cpp		The implementation of the ISODate class
dllmain.cpp		The entry point for the dll
phin.i			The swig interface file.



To Do:
Write makefile for Linux
Refactor the curve class by extracting the spline functionality to a separate class
Extend ISODate and Curve to other currencies


LIBOR and Swap rate data can be found on https://www.theice.com/iba/historical-data




